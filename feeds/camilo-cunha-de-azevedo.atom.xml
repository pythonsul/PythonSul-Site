<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Python Sul - Camilo Cunha de Azevedo</title><link href="https://pythonsul.github.io/PythonSul-Site/" rel="alternate"></link><link href="https://pythonsul.github.io/PythonSul-Site/feeds/camilo-cunha-de-azevedo.atom.xml" rel="self"></link><id>https://pythonsul.github.io/PythonSul-Site/</id><updated>2021-01-01T08:30:00-03:00</updated><entry><title>üêô Hy, Python como LISP</title><link href="https://pythonsul.github.io/PythonSul-Site/palestra6.html" rel="alternate"></link><published>2021-01-01T08:30:00-03:00</published><updated>2021-01-01T08:30:00-03:00</updated><author><name>Camilo Cunha de Azevedo</name></author><id>tag:pythonsul.github.io,2021-01-01:/PythonSul-Site/palestra6.html</id><summary type="html">&lt;p&gt;Nesta palestra, vamos falar sobre Hy, um dialeto Lisp que roda na m√°quina virtual do Python. Vamos apresentar as caracter√≠sticas e benef√≠cios desta linguagem em rela√ß√£o ao desenvolvimento em Python. Vamos explicar como a sintaxe concisa e funcional do Hy pode ajudar os desenvolvedores a escreverem c√≥digo mais expressivo e ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nesta palestra, vamos falar sobre Hy, um dialeto Lisp que roda na m√°quina virtual do Python. Vamos apresentar as caracter√≠sticas e benef√≠cios desta linguagem em rela√ß√£o ao desenvolvimento em Python. Vamos explicar como a sintaxe concisa e funcional do Hy pode ajudar os desenvolvedores a escreverem c√≥digo mais expressivo e leg√≠vel.&lt;/p&gt;</content><category term="horarios"></category><category term="horarios"></category></entry></feed>